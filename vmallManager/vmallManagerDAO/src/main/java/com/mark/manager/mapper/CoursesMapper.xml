<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mark.manager.mapper.CoursesMapper">
    <resultMap type="com.mark.manager.dto.Courses" id="coursesResultMap">
        <id property="courseId" column="course_id" />
        <result property="courseTitle" column="course_title" />
        <result property="coursePid" column="course_pid" />
        <result property="courseAuthor" column="course_author" />
        <result property="courseCover" column="course_cover" />
        <result property="courseTime" column="course_time" />
        <result property="courseStatus" column="course_status" />
        <result property="coursePrice" column="course_price" />
        <result property="courseDiscountPrice" column="course_discount_price" />
        <result property="courseScore" column="course_score" />
        <result property="courseClickNum" column="course_clickNum" />
        <collection property="vproCoursesCover" ofType="com.mark.manager.pojo.VproCoursesCover">
            <id property="courseCoverId" column="course_cover_id" />
            <result property="courseCoverKey" column="course_cover_key" />
            <result property="courseCoverAddress" column="course_cover_address" />
            <result property="courseCoverUptime" column="course_cover_uptime" />
            <result property="courseCoverIsuploaded" column="course_cover_isuploaded" />
            <result property="courseCoverIsused" column="course_cover_isused" />
        </collection>
        <collection property="vproAuth" ofType="com.mark.manager.pojo.VproAuth">
            <id property="authId" column="auth_id" />
            <result property="authAppid" column="auth_appid" />
        </collection>
        <collection property="vproCoursesContent" ofType="com.mark.manager.pojo.VproCoursesContent">
            <id property="detailId" column="detail_id" />
            <result property="courseContent" column="course_content" />
        </collection>
        <collection property="vproCoursesTempDetail" ofType="com.mark.manager.pojo.VproCoursesTempDetail">
            <id property="courseId" column="course_id" />
            <result property="coursePid" column="course_pid" />
            <result property="courseScore" column="course_score" />
            <result property="courseClickNum" column="course_clickNum" />
        </collection>
        <!--<collection property="vproVideo" ofType="com.mark.manager.pojo.VproVideo">-->
            <!--<id property="videoId" column="video_id" />-->
            <!--<result property="videoFileId" column="video_file_id" />-->
            <!--<result property="videoAuthor" column="video_author" />-->
            <!--<result property="videoTag" column="video_tag" />-->
            <!--<result property="videoDetailId" column="video_detail_id" />-->
            <!--<result property="videoLessonIsused" column="video_lesson_isused" />-->
        <!--</collection>-->
        <!--<collection property="vproVideoDetail" ofType="com.mark.manager.pojo.VproVideoDetail">-->
            <!--<result property="detailId" column="detail_id" />-->
            <!--<result property="detailContent" column="detail_content" />-->
            <!--<result property="detailFavorite" column="detail_favorite" />-->
        <!--</collection>-->
        <!--<collection property="vproVideoFiles" ofType="com.mark.manager.pojo.VproVideoFiles">-->
            <!--<result property="videoFileId" column="video_file_id" />-->
            <!--<result property="videoFileKey" column="video_file_key" />-->
            <!--<result property="videoFileUptime" column="video_file_uptime" />-->
            <!--<result property="videoFileIsuploaded" column="video_file_isuploaded" />-->
            <!--<result property="videoFileIsused" column="video_file_isused" />-->
            <!--<result property="videoFileSize" column="video_file_size" />-->
        <!--</collection>-->
    </resultMap>

    <select id="getCoursesByPid" resultMap="coursesResultMap" parameterType="string">
        SELECT
            vc.course_id,
            vc.course_title,
            vc.course_pid,
            vc.course_author,
            vc.course_cover,
            vc.course_time,
            vc.course_status,
            vc.course_price,
            vc.course_discount_price,
            vcc.course_cover_id,
            vcc.course_cover_key,
            vcc.course_cover_address,
            vcc.course_cover_uptime,
            vcc.course_cover_isuploaded,
            vcc.course_cover_isused,
            vct.course_content,
            va.auth_id,
            va.auth_appid
        FROM
            vpro_courses vc
          LEFT JOIN vpro_courses_cover vcc ON vcc.course_cover_id = vc.course_id
          LEFT JOIN vpro_auth va ON va.auth_id = vc.course_author
          LEFT JOIN vpro_courses_content vct on vct.course_id = vc.course_id
        WHERE
	      vc.course_pid IN (#{pid})
	      order by vc.course_id desc
    </select>

    <select id="getCourses" resultMap="coursesResultMap" parameterType="map">
        SELECT
            vc.course_id,
            vc.course_title,
            vc.course_pid,
            vc.course_author,
            vc.course_cover,
            vc.course_time,
            vc.course_status,
            vc.course_price,
            vc.course_discount_price,
            vcc.course_cover_id,
            vcc.course_cover_key,
            vcc.course_cover_address,
            vcc.course_cover_uptime,
            vcc.course_cover_isuploaded,
            vcc.course_cover_isused,
            vct.course_content,
            va.auth_id,
            va.auth_appid
        FROM
            vpro_courses vc
          LEFT JOIN vpro_courses_cover vcc ON vcc.course_cover_id = vc.course_id
          LEFT JOIN vpro_auth va ON va.auth_id = vc.course_author
          LEFT JOIN vpro_courses_content vct on vct.course_id = vc.course_id
        <if test="idRange.courseIdStart != null or idRange.courseIdEnd != null or idRange.courseId != null">
          where
        </if>
        <if test="idRange.courseId != null and idRange.courseIdStart == null and idRange.courseIdEnd == null">
            vc.course_id <![CDATA[=]]> ${idRange.courseId}
        </if>
        <if test="idRange.courseIdStart != null">
            vc.course_id <![CDATA[>=]]> ${idRange.courseIdStart}
        </if>
        <if test="idRange.courseIdEnd != null and idRange.courseIdStart != null">
          and
        </if>
        <if test="idRange.courseIdEnd != null">
            vc.course_id <![CDATA[<]]> ${idRange.courseIdEnd}
        </if>
    </select>

    <select id="getCoursesCount" resultType="java.lang.Long">
        SELECT COUNT(course_id) FROM vpro_courses
    </select>

    <select id="getCourseId" resultType="java.lang.String">
      SELECT course_id FROM vpro_courses
      <if test="courseId != null">
        where course_id > ${courseId}
      </if>
      LIMIT 1 OFFSET ${fragment}
    </select>

    <select id="getCoursesInfoForCatalog" resultMap="coursesResultMap">
SELECT
	course.course_id,
	course.course_author,
	course.course_time,
	course.course_price,
	course.course_discount_price,
	course.course_title,
	course_cover.course_cover_key,
	course_cover.course_cover_address,
	course_cover.course_cover_isuploaded,
	course_cover.course_cover_isused,
	course_detail.course_score,
	course_detail.course_clickNum
FROM
	vpro_courses_temp_detail AS course_detail
LEFT JOIN vpro_courses_cover AS course_cover ON course_detail.course_id = course_cover.course_cover_id
LEFT JOIN vpro_courses AS course ON course_detail.course_id = course.course_id
WHERE
	course_detail.course_id IN (
		SELECT
			course_id
		FROM
			vpro_courses_temp_detail
        <where>
            <trim prefix="(" prefixOverrides="and" suffix=")">
                and course_pid IN
                <foreach close=")" collection="navIds" item="id" open="(" separator=",">
                    #{id}
                </foreach>
            </trim>
        </where>
	)
ORDER BY
    course_clickNum desc
    </select>

    <select id="getIndexCoursesInfo" resultMap="coursesResultMap">
SELECT
	course.course_id,
	course.course_author,
	course.course_time,
	course.course_price,
	course.course_title,
	course_cover.course_cover_key,
	course_cover.course_cover_address,
	course_cover.course_cover_isuploaded,
	course_cover.course_cover_isused,
	course_detail.course_score,
	course_detail.course_clickNum
FROM
	vpro_courses_temp_detail AS course_detail
LEFT JOIN vpro_courses_cover AS course_cover ON course_detail.course_id = course_cover.course_cover_id
LEFT JOIN vpro_courses AS course ON course_detail.course_id = course.course_id
WHERE
	course_detail.course_id IN (
		SELECT
			f.course_id
		FROM (
			SELECT
				course_id
			FROM
				vpro_courses_temp_detail
        <where>
            <trim prefix="(" prefixOverrides="and" suffix=")">
                and course_pid IN
                <foreach close=")" collection="navIds" item="id" open="(" separator=",">
                    #{id}
                </foreach>
            </trim>
        </where>
			ORDER BY
				course_clickNum
			DESC
			LIMIT
				6)
		as f
);
    </select>
    
    <select id="getCourseForDetail" resultMap="coursesResultMap">
select
	vc.course_id,
	vc.course_pid,
	vc.course_title,
	vc.course_price,
	vc.course_author,
	vc.course_time,
	vc.course_status,
	vc.course_discount_price,
	vcc.course_cover_key,
	vcc.course_cover_address,
	va.auth_appid,
	vct.course_score,
	vct.course_clickNum,
	vcc2.detail_id,
	vcc2.course_content
from
	vpro_courses as vc
LEFT JOIN
	vpro_courses_temp_detail as vct on vct.course_id = vc.course_id
LEFT JOIN
	vpro_auth as va on va.auth_id = vc.course_author
LEFT JOIN
	vpro_courses_cover as vcc on vcc.course_cover_id = vc.course_id
LEFT JOIN
    vpro_courses_content as vcc2 on vcc2.course_id = vc.course_id
WHERE
	vc.course_id = #{courseId}
    </select>
    
    <sql id="getIndexCourseInfo_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Nov 27 17:05:37 CST 2018.
        -->
        <where>
            <trim prefix="(" prefixOverrides="and" suffix=")">
                and course_pid IN
                <foreach close=")" collection="navIds.entrySet()" item="id" index="key" open="(" separator=",">
                    #{id}
                </foreach>
            </trim>
        </where>
    </sql>
</mapper>